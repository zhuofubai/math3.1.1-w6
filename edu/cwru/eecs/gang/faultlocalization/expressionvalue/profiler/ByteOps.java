/**
 Copyright (c) 2010 Gang Shu (gang.shu@case.edu)
 Software Engineering Laboratory (http://selserver.case.edu/),
 EECS, Case Western Reserve University
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 1. Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 3. The name of the author may not be used to endorse or promote products
    derived from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.cwru.eecs.gang.faultlocalization.expressionvalue.profiler;

import org.objectweb.asm.commons.AdviceAdapter;

public class ByteOps {

	public static String getOps(int opcode) {

		switch (opcode) {
			case AdviceAdapter.AALOAD:
				return "AALOAD";
			case AdviceAdapter.AASTORE:
				return "AASTORE";
			case AdviceAdapter.ACONST_NULL:
				return "ACONST_NULL";
			case AdviceAdapter.ALOAD:
				return "ALOAD";
			case 42:
				return "ALOAD_0";
			case 43:
				return "ALOAD_1";
			case 44:
				return "ALOAD_2";
			case 45:
				return "ALOAD_3";
			case AdviceAdapter.ANEWARRAY:
				return "ANEWARRAY";
			case AdviceAdapter.ARETURN:
				return "ARETURN";
			case AdviceAdapter.ARRAYLENGTH:
				return "ARRAYLENGTH";
			case AdviceAdapter.ASTORE:
				return "ASTORE";
			case 75:
				return "ASTORE_0";
			case 76:
				return "ASTORE_1";
			case 77:
				return "ASTORE_2";
			case 78:
				return "ASTORE_3";
			case AdviceAdapter.ATHROW:
				return "ATHROW";
			case AdviceAdapter.BALOAD:
				return "BALOAD";
			case AdviceAdapter.BASTORE:
				return "BASTORE";
			case AdviceAdapter.BIPUSH:
				return "BIPUSH";
			case AdviceAdapter.CALOAD:
				return "CALOAD";
			case AdviceAdapter.CASTORE:
				return "CASTORE";
			case AdviceAdapter.CHECKCAST:
				return "CHECKCAST";
			case AdviceAdapter.D2F:
				return "D2F";
			case AdviceAdapter.D2I:
				return "D2I";
			case AdviceAdapter.D2L:
				return "D2L";
			case AdviceAdapter.DADD:
				return "DADD";
			case AdviceAdapter.DALOAD:
				return "DALOAD";
			case AdviceAdapter.DASTORE:
				return "DASTORE";
			case AdviceAdapter.DCMPG:
				return "DCMPG";
			case AdviceAdapter.DCMPL:
				return "DCMPL";
			case 14:
				return "DCONST_0";
			case 15:
				return "DCONST_1";
			case AdviceAdapter.DDIV:
				return "DDIV";
			case AdviceAdapter.DLOAD:
				return "DLOAD";
			case 38:
				return "DLOAD_0";
			case 39:
				return "DLOAD_1";
			case 40:
				return "DLOAD_2";
			case 41:
				return "DLOAD_3";
			case AdviceAdapter.DMUL:
				return "DMUL";
			case AdviceAdapter.DNEG:
				return "DNEG";
			case AdviceAdapter.DREM:
				return "DREM";
			case AdviceAdapter.DRETURN:
				return "DRETURN";
			case AdviceAdapter.DSTORE:
				return "DSTORE";
			case 71:
				return "DSTORE_0";
			case 72:
				return "DSTORE_1";
			case 73:
				return "DSTORE_2";
			case 74:
				return "DSTORE_3";
			case AdviceAdapter.DSUB:
				return "DSUB";
			case AdviceAdapter.DUP:
				return "DUP";
			case AdviceAdapter.DUP_X1:
				return "DUP_X1";
			case AdviceAdapter.DUP_X2:
				return "DUP_X2";
			case AdviceAdapter.DUP2:
				return "DUP2";
			case AdviceAdapter.DUP2_X1:
				return "DUP2_X1";
			case AdviceAdapter.DUP2_X2:
				return "DUP2_X2";
			case AdviceAdapter.F2D:
				return "F2D";
			case AdviceAdapter.F2I:
				return "F2I";
			case AdviceAdapter.F2L:
				return "F2L";
			case AdviceAdapter.FADD:
				return "FADD";
			case AdviceAdapter.FALOAD:
				return "FALOAD";
			case AdviceAdapter.FASTORE:
				return "FASTORE";
			case AdviceAdapter.FCMPG:
				return "FCMPG";
			case AdviceAdapter.FCMPL:
				return "FCMPL";
			case 11:
				return "FCONST_0";
			case 12:
				return "FCONST_1";
			case 13:
				return "FCONST_2";
			case AdviceAdapter.FDIV:
				return "FDIV";
			case AdviceAdapter.FLOAD:
				return "FLOAD";
			case 34:
				return "FLOAD_0";
			case 35:
				return "FLOAD_1";
			case 36:
				return "FLOAD_2";
			case 37:
				return "FLOAD_3";
			case 106:
				return "FMUL";
			case 118:
				return "FNEG";
			case 114:
				return "FREM";
			case 174:
				return "FRETURN";
			case 56:
				return "FSTORE";
			case 67:
				return "FSTORE_0";
			case 68:
				return "FSTORE_1";
			case 69:
				return "FSTORE_2";
			case 70:
				return "FSTORE_3";
			case 102:
				return "FSUB";
			case 180:
				return "GETFIELD";
			case 178:
				return "GETSTATIC";
			case 167:
				return "GOTO";
			case 200:
				return "GOTO_W";
			case 145:
				return "I2B";
			case 146:
				return "I2C";
			case 135:
				return "I2D";
			case 134:
				return "I2F";
			case 133:
				return "I2L";
			case 147:
				return "I2S";
			case 96:
				return "IADD";
			case 46:
				return "IALOAD";
			case 126:
				return "IAND";
			case 79:
				return "IASTORE";
			case 3:
				return "ICONST_0";
			case 4:
				return "ICONST_1";
			case 5:
				return "ICONST_2";
			case 6:
				return "ICONST_3";
			case 7:
				return "ICONST_4";
			case 8:
				return "ICONST_5";
			case 2:
				return "ICONST_M1";
			case 108:
				return "IDIV";
			case AdviceAdapter.IF_ACMPEQ:
				return "IF_ACMPEQ";
			case AdviceAdapter.IF_ACMPNE:
				return "IF_ACMPNE";
			case 159:
				return "IF_ICMPEQ";
			case 162:
				return "IF_ICMPGE";
			case 163:
				return "IF_ICMPGT";
			case 164:
				return "IF_ICMPLE";
			case 161:
				return "IF_ICMPLT";
			case 160:
				return "IF_ICMPNE";
			case 153:
				return "IFEQ";
			case 156:
				return "IFGE";
			case 157:
				return "IFGT";
			case 158:
				return "IFLE";
			case 155:
				return "IFLT";
			case 154:
				return "IFNE";
			case 199:
				return "IFNONNULL";
			case 198:
				return "IFNULL";
			case 132:
				return "IINC";
			case 21:
				return "ILOAD";
			case 26:
				return "ILOAD_0";
			case 27:
				return "ILOAD_1";
			case 28:
				return "ILOAD_2";
			case 29:
				return "ILOAD_3";
			case 104:
				return "IMUL";
			case 116:
				return "INEG";
			case 193:
				return "INSTANCEOF";
			case 185:
				return "INVOKEINTERFACE";
			case 183:
				return "INVOKESPECIAL";
			case 184:
				return "INVOKESTATIC";
			case 182:
				return "INVOKEVIRTUAL";
			case 128:
				return "IOR";
			case 112:
				return "IREM";
			case 172:
				return "IRETURN";
			case 120:
				return "ISHL";
			case 122:
				return "ISHR";
			case 54:
				return "ISTORE";
			case 59:
				return "ISTORE_0";
			case 60:
				return "ISTORE_1";
			case 61:
				return "ISTORE_2";
			case 62:
				return "ISTORE_3";
			case 100:
				return "ISUB";
			case 124:
				return "IUSHR";
			case 130:
				return "IXOR";
			case 168:
				return "JSR";
			case 201:
				return "JSR_W";
			case 138:
				return "L2D";
			case 137:
				return "L2F";
			case 136:
				return "L2I";
			case 97:
				return "LADD";
			case 47:
				return "LALOAD";
			case 127:
				return "LAND";
			case 80:
				return "LASTORE";
			case 148:
				return "LCMP";
			case 9:
				return "LCONST_0";
			case 10:
				return "LCONST_1";
			case 18:
				return "LDC";
			case 19:
				return "LDC_W";
			case 20:
				return "LDC2_W";
			case 109:
				return "LDIV";
			case 22:
				return "LLOAD";
			case 30:
				return "LLOAD_0";
			case 31:
				return "LLOAD_1";
			case 32:
				return "LLOAD_2";
			case 33:
				return "LLOAD_3";
			case 105:
				return "LMUL";
			case 117:
				return "LNEG";
			case 171:
				return "LOOKUPSWITCH";
			case 129:
				return "LOR";
			case 113:
				return "LREM";
			case 173:
				return "LRETURN";
			case 121:
				return "LSHL";
			case 123:
				return "LSHR";
			case 55:
				return "LSTORE";
			case 63:
				return "LSTORE_0";
			case 64:
				return "LSTORE_1";
			case 65:
				return "LSTORE_2";
			case 66:
				return "LSTORE_3";
			case 101:
				return "LSUB";
			case 125:
				return "LUSHR";
			case 131:
				return "LXOR";
			case 194:
				return "MONITORENTER";
			case 195:
				return "MONITOREXIT";
			case 197:
				return "MULTIANEWARRAY";
			case 187:
				return "NEW";
			case 188:
				return "NEWARRAY";
			case 0:
				return "NOP";
			case AdviceAdapter.POP:
				return "POP";
			case AdviceAdapter.POP2:
				return "POP2";
			case AdviceAdapter.PUTFIELD:
				return "PUTFIELD";
			case AdviceAdapter.PUTSTATIC:
				return "PUTSTATIC";
			case AdviceAdapter.RET:
				return "RET";
			case AdviceAdapter.RETURN:
				return "RETURN";
			case AdviceAdapter.SALOAD:
				return "SALOAD";
			case AdviceAdapter.SASTORE:
				return "SASTORE";
			case AdviceAdapter.SIPUSH:
				return "SIPUSH";
			case AdviceAdapter.SWAP:
				return "SWAP";
			case AdviceAdapter.TABLESWITCH:
				return "TABLESWITCH";
			case 196:
				return "WIDE";
			default:
				return "-";
		}

	}

}
